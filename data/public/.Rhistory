chL_public <- read.delim("~/GitHub/Group-Comparison/data/public/chL_public.txt", header=FALSE)
View(chL_public)
chW_public <- read.delim("~/GitHub/Group-Comparison/data/public/chW_public", header=FALSE)
View(chW_public)
chL=chL_public
chW=chW_public
remove(chL_public,chW_public)
chL$spl=sample.split(chL[,1],SplitRatio=0.8)
spl=chL$spl
chL=chL[-6]
library(caTools)
set.seed(10)
chL$spl=sample.split(chL[,1],SplitRatio=0.8)
spl=chL$spl
chL=chL[-6]
write.table(spl,'spl_public.txt',col.names=F,row.names=F)
chL_train=subset(chL, spl==TRUE)
chW_train=subset(chW, spl==TRUE)
chL_test=subset(chL, spl==FALSE)
chW_test=subset(chW, spl==FALSE)
write.table(chL_train,'chL_public_train.txt',col.names=F,row.names=F)
write.table(chW_train,'chW_public_train.txt',col.names=F,row.names=F)
write.table(chL_test,'chL_public_test.txt',col.names=F,row.names=F)
write.table(chW_test,'chW_public_test.txt',col.names=F,row.names=F)
pL_public <- read.delim("~/GitHub/Group-Comparison/data/public/pL_public.txt", header=FALSE)
View(pL_public)
pW_public <- read.delim("~/GitHub/Group-Comparison/data/public/pW_public", header=FALSE)
View(pW_public)
pL=pL_public
pW=pW_public
pL_train=subset(pL, spl==TRUE)
pW_train=subset(pW, spl==TRUE)
pL_test=subset(pL, spl==FALSE)
pW_test=subset(pW, spl==FALSE)
write.table(pL_train,'pL_public_train.txt',col.names=F,row.names=F)
write.table(pW_train,'pW_public_train.txt',col.names=F,row.names=F)
write.table(pL_test,'pL_public_test.txt',col.names=F,row.names=F)
write.table(pW_test,'pW_public_test.txt',col.names=F,row.names=F)
remove(chL,chL_test,chL_train)
load("~/Documents/ACADEMIC/Machine Learning/03HS/data/data02_char/XY.RData")
spl_public <- read.table("~/GitHub/Group-Comparison/data/public/spl_public.txt", header=TRUE, quote="\"")
View(spl_public)
X_train=subset(X, spl==TRUE)
X_test=subset(X, spl==FALSE)
X_train=subset(X, spl_public==TRUE)
X_test=subset(X, spl_public==FALSE)
write.table(X_train,'X_public_train.txt',col.names=F,row.names=F)
remove(Y)
remove(X)
save.image("~/GitHub/Group-Comparison/data/public/X.RData")
load("~/Documents/ACADEMIC/Machine Learning/03HS/data/data01_char/progress1.1.RData")
getind=function(a){
ind=1:5
for (i in 1:5){
ind[i]=which(Cname==a[,i])
}
return(ind)
}
vI=lI=data.frame()
for (i in 1:9610){
vI=rbind(vI,getind(resultv[i,]))
lI=rbind(lI,getind(resultl[i,]))
}
View(vI)
write.table(vI,'vI.txt',col.names=F,row.names=F)
write.table(lI,'lI.txt',col.names=F,row.names=F)
chL <- read.table("~/GitHub/Group-Comparison/data/chL.txt", quote="\"")
View(chL)
chW <- read.table("~/GitHub/Group-Comparison/data/chW.txt", quote="\"")
View(chW)
library(caTools)
spl <- read.table("~/GitHub/Group-Comparison/data/tournament/spl.txt", header=TRUE, quote="\"")
View(spl)
spl <- read.table("~/GitHub/Group-Comparison/data/tournament/spl.txt", quote="\"")
View(spl)
chL_train=subset(chL, spl==TRUE)
chW_train=subset(chW, spl==TRUE)
chL_test=subset(chL, spl==FALSE)
chW_test=subset(chW, spl==FALSE)
write.table(chL_train,'chL_train.txt',col.names=F,row.names=F)
write.table(chW_train,'chW_train.txt',col.names=F,row.names=F)
write.table(chL_test,'chL_test.txt',col.names=F,row.names=F)
write.table(chW_test,'chW_test.txt',col.names=F,row.names=F)
load("~/GitHub/Group-Comparison/data/public/X.RData")
n=dim(X_test)[1]+dim(X_train)[1]
Y=factor(c(rep(1,n/2),rep(0,n/2)))
Y_train=subset(Y, spl_public==TRUE)
Y_test=subset(Y, spl_public==FALSE)
remove(Y)
save.image("~/GitHub/Group-Comparison/data/public/XY.RData")
spl <- read.table("~/GitHub/Group-Comparison/data/tournament/spl.txt", quote="\"")
View(spl)
X_train <- read.table("~/GitHub/Group-Comparison/data/tournament/X_train.txt", quote="\"")
View(X_train)
X_test <- read.table("~/GitHub/Group-Comparison/data/tournament/X_test.txt", quote="\"")
View(X_test)
n=dim(X_test)[1]+dim(X_train)[1]
Y=factor(c(rep(1,n/2),rep(0,n/2)))
Y_train=subset(Y, spl==TRUE)
Y_test=subset(Y, spl==FALSE)
remove(Y)
save.image("~/GitHub/Group-Comparison/data/tournament/XY.RData")
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
K=as.vector(tb)
return(K)
}
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
chW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_test.txt", quote="\"")
View(chW_test)
chW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_test.txt", quote="\"")
View(chW_test)
chL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_test.txt", quote="\"")
View(chL_test)
ch_train_K=getK(chW_train,chL_train)
ch_test_K=getK(chW_test,chL_test)
write.table(ch_train_K,'ch_train_K.txt',col.names=F,row.names=F)
write.table(ch_test_K,'ch_test_K.txt',col.names=F,row.names=F)
pL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/pL_train.txt", quote="\"")
View(pL_train)
pL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/pL_test.txt", quote="\"")
View(pL_test)
pW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/pW_test.txt", quote="\"")
View(pW_test)
pW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/pW_train.txt", quote="\"")
View(pW_train)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
K=as.vector(tb)
return(K)
}
p_train_K=getK(pW_train,pL_train)
p_test_K=getK(pW_test,pL_test)
write.table(p_train_K,'p_train_K.txt',col.names=F,row.names=F)
write.table(p_test_K,'p_test_K.txt',col.names=F,row.names=F)
chL_public_test <- read.table("~/GitHub/Group-Comparison/data/public/chL_public_test.txt", quote="\"")
View(chL_public_test)
chL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chL_public_train.txt", quote="\"")
View(chL_public_train)
chW_public_test <- read.table("~/GitHub/Group-Comparison/data/public/chW_public_test.txt", quote="\"")
View(chW_public_test)
chW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chW_public_train.txt", quote="\"")
View(chW_public_train)
ch_public_train_K=getK(chW_public_train,chL_public_train)
ch_public_test_K=getK(chW_public_test,chL_public_test)
# Get K
# Get K
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
K=as.vector(tb)
return(K)
}
ch_public_train_K=getK(chW_public_train,chL_public_train)
ch_public_test_K=getK(chW_public_test,chL_public_test)
write.table(ch_public_train_K,'ch_public_train_K.txt',col.names=F,row.names=F)
write.table(ch_public_test_K,'ch_public_test_K.txt',col.names=F,row.names=F)
pL_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_test.txt", quote="\"")
View(pL_public_test)
pL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_train.txt", quote="\"")
View(pL_public_train)
pW_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_test.txt", quote="\"")
View(pW_public_test)
pW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_train.txt", quote="\"")
View(pW_public_train)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
K=as.vector(tb)
return(K)
}
p_public_train_K=getK(pW_public_train,pL_public_train)
p_public_test_K=getK(pW_public_test,pL_public_test)
write.table(p_public_train_K,'p_public_train_K.txt',col.names=F,row.names=F)
write.table(p_public_test_K,'p_public_test_K.txt',col.names=F,row.names=F)
