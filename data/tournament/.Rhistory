getpair=function(a){
b=data.frame(t(combn(a,2)))
ind=numeric()
for (i in 1:10){
tmp=which(Selection[,1]==b[i,1]&Selection[,2]==b[i,2])
ind=c(ind,tmp)
}
return(ind)
}
getpairind=function(a){
ind=getpair(a)
tmp=rep(0,k)
tmp[ind]=1
return(tmp)
}
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
n=dim(chL_train)[1]
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
X_se=X_sew-X_sel
save.image("~/Documents/ACADEMIC/Machine Learning/03HS/data/XY_select.RData")
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
tmp=c(X_sel,X_sew)
tmp=cbind(X_sel,X_sew)
remove(tmp)
X_sel_train=cbind(X_LR_train,X_se)
chW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_test.txt", quote="\"")
View(chW_test)
chL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_test.txt", quote="\"")
View(chL_test)
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_se=X_sew-X_sel
X_se_train=X_sel_train
X_se_test=cbind(X_LR_test,X_se)
X_se=X_se[7689:9610,]
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_se=X_sew-X_sel
X_se=X_se[1:1922,]
remove(X_se_test)
X_se_test=cbind(X_LR_test,X_se)
rm(list=setdiff(ls(), c("Cname","X_se_test","X_se_train","Y_test","Y_train")))
library(LiblineaR)
library(mclust)
fital1=LiblineaR(X_se_train,Y_train,type=0,cost=4)
fital1.pre=predict(fital1,X_se_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
accuracy1=1:10
for (i in 1:10){
accuracy1[i]=LiblineaR(X_se_train,Y_train, type=0,cost=i,cross=5)
}
fital1=LiblineaR(X_se_train,Y_train,type=0,cost=which.max(accuracy1))
which.max(accuracy1)
fital1.pre=predict(fital1,X_se_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
save.image("~/GitHub/Group-Comparison/experiment result/LR_select.RData")
chW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chW_public_train.txt", quote="\"")
View(chW_public_train)
chL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chL_public_train.txt", quote="\"")
View(chL_public_train)
win_player=chW_public_train
lose_player=chL_public_train
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
tb
p_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/p_public_train_K.txt", quote="\"")
View(p_public_train_K)
pW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_train.txt", quote="\"")
View(pW_public_train)
pL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_train.txt", quote="\"")
View(pL_public_train)
win_player=pW_public_train
lose_player=pL_public_train
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
tb
K=as.data.frame(tb)
View(K)
tmpK=as.vector(tb)
View(K)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
#K=as.vector(tb)
K=as.data.frame(tb)
return(K)
}
p_public_train_K=getK(pW_public_train,pL_public_train)
write.table(p_public_train_K,'p_public_train_K.txt',col.names=F,row.names=F)
pW_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_test.txt", quote="\"")
View(pW_public_test)
pL_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_test.txt", quote="\"")
View(pL_public_test)
p_public_test_K=getK(pW_public_test,pL_public_test)
write.table(p_public_test_K,'p_public_test_K.txt',col.names=F,row.names=F)
View(p_public_train_K)
View(p_public_test_K)
load("~/GitHub/Group-Comparison/experiment result/LR&LR_allpair/ch_result.RData")
fital1.prerror$errorRate
1-fital1.prerror$errorRate
1-fital10.prerror$errorRate
1-fit.prerror$errorRate
load("~/GitHub/Group-Comparison/experiment result/LR&LR_allpair/ch_result_public.RData")
1-fit.prerror$errorRate
1-fital1.prerror$errorRate
load("~/GitHub/Group-Comparison/experiment result/LR_select/LR_select.RData")
heroranks.small=read.csv("~/Documents/ACADEMIC/Machine Learning/03HS/data/hotspairsrankings/heroranks-small.csv")
winpair=subset(heroranks.small,heroranks.small$tier==1)
losepair=subset(heroranks.small,heroranks.small$tier==9)
selectpairs=rbind(winpair,losepair)[,2:3]
View(heroranks.small)
winpair=subset(heroranks.small,heroranks.small$tier==c(1,9))
winpair=subset(heroranks.small,heroranks.small$tier==1)
View(heroranks.small)
load("~/GitHub/Group-Comparison/experiment result/LR_select/LR_select.RData")
rm(list=setdiff(ls(), "Cname"))
heroranks.small=read.csv("~/Documents/ACADEMIC/Machine Learning/03HS/data/hotspairsrankings/heroranks-small.csv")
pair1=subset(heroranks.small,heroranks.small$tier==1)
pair9=subset(heroranks.small,heroranks.small$tier==9)
pair2=subset(heroranks.small,heroranks.small$tier==2)
pair8=subset(heroranks.small,heroranks.small$tier==8)
selectpairs=rbind(pair1,pair2,pair8,pair9)
49+51+52+23
selectpairs=rbind(pair1,pair2,pair8,pair9)[2:3,]
View(selectpairs)
selectpairs=rbind(pair1,pair2,pair8,pair9)[,2:3]
View(selectpairs)
getselection=function(a){
ind=rep(0,2)
ind[1]=which(Cname==a[1,1])
ind[2]=which(Cname==a[1,2])
return(ind)
}
Selection=data.frame()
k=dim(selectpairs)[1]
for (i in 1:k){
Selection=rbind(Selection,getselection(selectpairs[i,]))
}
View(Selection)
rm(list=setdiff(ls(), c("Cname","Selection"))
)
View(Selection)
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
n=dim(chL_train)[1]
getpair=function(a){
b=data.frame(t(combn(a,2)))
ind=numeric()
for (i in 1:10){
tmp=which(Selection[,1]==b[i,1]&Selection[,2]==b[i,2])
ind=c(ind,tmp)
}
return(ind)
}
getpairind=function(a){
ind=getpair(a)
tmp=rep(0,k)
tmp[ind]=1
return(tmp)
}
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
k=dim(Selection)[1]
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
X_se=X_sew-X_sel
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
X_se_train=cbind(X_LR_train,X_se)
X_sew=X_sel=data.frame()
n/5
X_sew=X_sel=data.frame()
for (i in 1:(n/5){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_sew=X_sel=data.frame()
for (i in 1:(n/5)){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
chW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_test.txt", quote="\"")
View(chW_test)
chL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_test.txt", quote="\"")
View(chL_test)
X_sew=X_sel=data.frame()
for (i in 1:(n/5)){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_se=X_sew-X_sel
X_se_test=cbind(X_LR_test,X_se)
remove(Selection,spl,X_se,X_sel,X_sew,X_test,X_train)
remove(k)
remove(i)
library(LiblineaR)
library(mclust)
accuracy1=1:10
for (i in 1:10){
accuracy1[i]=LiblineaR(X_se_train,Y_train, type=0,cost=i,cross=5)
}
fital1=LiblineaR(X_se_train,Y_train,type=0,cost=which.max(accuracy1))
which.max(accuracy1)
fital1.pre=predict(fital1,X_se_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
1-fital1.prerror$errorRate
save.image("~/GitHub/Group-Comparison/experiment result/LR_select/LR_select2.RData")
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
pL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/pL_train.txt", quote="\"")
View(pL_train)
pW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/pW_train.txt", quote="\"")
View(pW_train)
pL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/pL_test.txt", quote="\"")
View(pL_test)
pW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/pW_test.txt", quote="\"")
View(pW_test)
p_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/p_train_K.txt", quote="\"")
View(p_train_K)
p_test_K <- read.table("~/GitHub/Group-Comparison/data/tournament/p_test_K.txt", quote="\"")
View(p_test_K)
pL <- read.table("~/GitHub/Group-Comparison/data/tournament/pL.txt", quote="\"")
View(pL)
pW <- read.table("~/GitHub/Group-Comparison/data/tournament/pW.txt", quote="\"")
View(pW)
spl <- read.table("~/GitHub/Group-Comparison/data/tournament/spl.txt", header=TRUE, quote="\"")
View(spl)
View(pW)
win_char=pW
lose_char=pL
p=3470
getvector=function(a){
a=as.numeric(a)
tmp=rep(0,p)
tmp[a]=1
return(tmp)
}
save.image("~/Downloads/LR-player.RData")
rm(list=setdiff(ls(), c("spl")))
vM <- read.csv("~/Documents/ACADEMIC/Machine Learning/03HS/data/data01_player/vM.csv", header=FALSE)
View(vM)
lM <- read.csv("~/Documents/ACADEMIC/Machine Learning/03HS/data/data01_player/lM.csv", header=FALSE)
View(lM)
X_PL=t(vM-lM)
View(X_PL)
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
remove(lM,vM)
View(X_LR_test)
X_PL_train=subset(X_PL,spl=TRUE)
X_PL_test=subset(X_PL,spl=FALSE)
remove(X_PL)
tmp=data.frame(X_PL_train)
X_LR_test=data.frame(X_PL_train)
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
X_PL_test=data.frame(X_PL_test)
X_PL_train=data.frame(X_PL_train)
accuracy1=1:10
for (i in 1:10){
accuracy1[i]=LiblineaR(X_PL_train,Y_train, type=0,cost=i,cross=5)
}
ch_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/ch_train_K.txt", quote="\"")
View(ch_train_K)
p_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/p_train_K.txt", quote="\"")
View(p_train_K)
ch_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/ch_public_train_K.txt", quote="\"")
View(ch_public_train_K)
p_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/p_public_train_K.txt", quote="\"")
View(p_public_train_K)
dota_char_K <- read.table("~/GitHub/Group-Comparison/data/dota/dota_char_K", quote="\"")
View(dota_char_K)
dota_player_K <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_K", quote="\"")
View(dota_player_K)
dota_player_W_train <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_W_train", quote="\"")
View(dota_player_W_train)
dota_player_W_test <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_W_test", quote="\"")
View(dota_player_W_test)
dota_player_W=rbind(dota_player_W_train,dota_player_W_test)
dota_player_L_train <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_L_train", quote="\"")
View(dota_player_L_train)
dota_player_L_test <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_L_test", quote="\"")
View(dota_player_L_test)
dota_player_L=rbind(dota_player_L_train,dota_player_L_test)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
#K=as.vector(tb)
K=as.data.frame(tb)
return(K)
}
dota_player_K=getK(dota_player_W,dota_player_L)
View(dota_player_K)
p_public_train_K <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(p_public_train_K)
n=7266
K=rep(0,n)
p_public_train_K$V1[1]
for (i in 1:n){
if (p_public_train_K$V1[i]==i){
K[i]=p_public_train_K$V2[i]
}
else {
K[i]=0
}
}
i=1
if (p_public_train_K$V1[i]==i){
K[i]=p_public_train_K$V2[i]
}
K
K=rep(0,n)
View(p_public_train_K)
k=p_public_train_K
pubk=k
remove(p_public_train_K,k)
pubk[1,]
pubk[2,]
pubk[1:2,]
pubk[end,]
pubk[-1,]
i=3
tmp1=pubk[1:i,]
tmp2=pubk[(i+1):length(pubk),]
dim(pubk)[1]
tmp2=pubk[(i+1):dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
View(pubk)
pubk <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(pubk)
View(pubk)
pubk[7251,]
n=7266
for (i in 1:n){
if (pubk$V1[i]!=i){
tmp1=pubk[1:i,]
tmp2=pubk[(i+1):dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
View(pubk)
pubk <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(pubk)
i=1
if (pubk$V1[i]!=i){
tmp1=pubk[1:i,]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
i=2
if (pubk$V1[i]!=i){
tmp1=pubk[1:i,]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
n=7266
for (i in 1:n){
if (pubk$V1[i]!=i){
tmp1=pubk[1:i,]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
View(tmp1)
dim(pubk)
View(pubk)
pubk
tmp1
pubk <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(pubk)
pubk$V1[2000]
pubk$V1[5000]
pubk$V1[4000]
pubk$V1[3000]
pubk$V1[2500]
pubk$V1[2700]
pubk$V1[2800]
pubk$V1[2750]
pubk$V1[2750:2800,]
pubk$V1[2750:2800]
i=2800
if (pubk$V1[i]!=i){
tmp1=pubk[1:i,]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
pubk$V1[3000]
View(pubk)
pubk[3000,]
pubk[2790:2805,]
pubk <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(pubk)
i=288
i=2800
if (pubk$V1[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
pubk[2790:2805,]
n=7266
for (i in 1:n){
if (pubk$V1[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
pubk=rbind(tmp1,tmp2)
pubk$V1[7000,]
pubk$V1[7000]
pubk$V1[7200]
pubk$V1[7230]
pubk$V1[7230:7265]
pubk[7230:7265,]
i=7242
if (pubk$V1[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
View(pubk)
pubk[7266,]
pubk[7240,]
pubk[3000,]
pubk <- read.table("~/GitHub/Group-Comparison/data/pubjulia/p_public_train_K.txt", quote="\"")
View(pubk)
n=7266
for (i in 1:n){
if (pubk$V1[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
write.table(pubk,'BT_player_K.txt',col.names=F,row.names=F)
dota_player_W_train <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_W_train", quote="\"")
View(dota_player_W_train)
dota_player_W_test <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_W_test", quote="\"")
View(dota_player_W_test)
dota_player_L_train <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_L_train", quote="\"")
View(dota_player_L_train)
dota_player_L_test <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_L_test", quote="\"")
View(dota_player_L_test)
win_player=rbind(dota_player_W_train,dota_player_W_test)
lose_player=rbind(dota_player_L_train,dota_player_L_test)
dota_player_K=getK(win_player,lose_player)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
#K=as.vector(tb)
K=as.data.frame(tb)
return(K)
}
dota_player_K=getK(win_player,lose_player)
View(dota_player_K)
dota_player_train_K=getK(dota_player_W_train,dota_player_L_train)
n=33127
pubk=dota_player_train_K
for (i in 1:n){
if (pubk$V1[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
View(pubk)
for (i in 1:n){
if (pubk$total[i]!=i){
tmp1=pubk[1:(i-1),]
tmp2=pubk[i:dim(pubk)[1],]
pubk=rbind(tmp1,c(i,0),tmp2)
}
}
write.table(pubk,'dota_player_K.txt',col.names=F,row.names=F)
dota_player_L_test <- read.table("~/GitHub/Group-Comparison/data/dota/dota_player_L_test", quote="\"")
View(dota_player_L_test)
write.table(dota_player_L_test,'dota_player_L_test.txt',col.names=F,row.names=F)
?write.csv2
write.csv2(dota_player_L_test,'dota_player_L_test.csv',col.names=F,row.names=F)
write.csv2(dota_player_L_test,'dota_player_L_test.csv')
