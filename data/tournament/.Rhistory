chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
char_id <- read.table("~/GitHub/Group-Comparison/data/tournament/char_id.txt", quote="\"")
View(char_id)
dim(char_id)
getvector=function(a){
a=as.numeric(a)
tmp=rep(0,54)
tmp[a]=1
return(tmp)
}
p=dim(char_id)[1]
getvector=function(a){
a=as.numeric(a)
tmp=rep(0,p)
tmp[a]=1
return(tmp)
}
win_char=chW_train
lose_char=chL_train
vM=lM=data.frame()
n=dim(win_char)[1]
for (i in 1:(n/4)){
vM=rbind(vM,getvector(win_char[i,]))
lM=rbind(lM,getvector(lose_char[i,]))
}
n/4+1
for (i in (n/4+1):(n/2)){
vM=rbind(vM,getvector(win_char[i,]))
lM=rbind(lM,getvector(lose_char[i,]))
}
vM3=lM3=data.frame()
for (i in (n/2+1):(n*0.75)){
vM3=rbind(vM3,getvector(win_char[i,]))
lM3=rbind(lM3,getvector(lose_char[i,]))
}
vM4=lM4=data.frame()
for (i in (n*0.75+1):n){
vM4=rbind(vM4,getvector(win_char[i,]))
lM4=rbind(lM4,getvector(lose_char[i,]))
}
vE=rbind(vM,vM3,vM4)
lE=rbind(lM,lM3,lM4)
vE=rbind(vM,vM3)
lE=rbind(lM,lM3)
vE=rbind(vM,vM4)
lE=rbind(lM,lM4)
vE=rbind(vE,vM4)
lE=rbind(lE,lM4)
lE=rbind(lE,lM4)
View(lE)
View(lM4)
vE=rbind(vM3,vM4)
lE=rbind(lM3,lM4)
remove(lE)
remove(vE)
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
View(lM3)
remove(lM4)
remove(vM4)
vM4=lM4=data.frame()
for (i in (n*0.75+1):n){
vM4=rbind(vM4,getvector(win_char[i,]))
lM4=rbind(lM4,getvector(lose_char[i,]))
}
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
names(vM4)=names(vM4)
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
names(vM4)=names(vM3)
names(lM4)=names(lM3)
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
vE=rbind(vM,vE2)
lE=rbind(lM,lE2)
View(lE)
write.table(vE,'chWE_train.txt')
write.table(lE,'chLE_train.txt')
write.table(vE,'chWE_train.txt',col.names=F,row.names=F)
write.table(lE,'chLE_train.txt',col.names=F,row.names=F)
chLE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chLE_train.txt", header=TRUE, quote="\"")
View(chLE_train)
chWE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chWE_train.txt", header=TRUE, quote="\"")
View(chWE_train)
vE=chLE_train
lE=chWE_train
write.table(vE,'chWE_train.txt',col.names=F,row.names=F)
write.table(lE,'chLE_train.txt',col.names=F,row.names=F)
chLE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chLE_train.txt", quote="\"")
View(chLE_train)
chWE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chWE_train.txt", quote="\"")
View(chWE_train)
View(chLE_train)
chWE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chWE_train.txt", quote="\"")
View(chWE_train)
chWE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chWE_train.txt", quote="\"")
View(chWE_train)
vE=chWE_train
lE=chlE_train
chLE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chLE_train.txt", quote="\"")
View(chLE_train)
lE=chlE_train
lE=chLE_train
write.table(vE,'chWE_train.txt',col.names=F,row.names=F)
write.table(lE,'chLE_train.txt',col.names=F,row.names=F)
View(chWE_train)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
View(chWE_train)
char_id <- read.table("~/GitHub/Group-Comparison/data/tournament/char_id.txt", quote="\"")
View(char_id)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
p=dim(char_id)[1]
win_char=chW_train
lose_char=chL_train
getvector=function(a){
a=as.numeric(a)
tmp=rep(0,p)
tmp[a]=1
return(tmp)
}
n=dim(win_char)[1]
vM1=lM1=data.frame()
for (i in 1:(n/4)){
vM1=rbind(vM1,getvector(win_char[i,]))
lM1=rbind(lM1,getvector(lose_char[i,]))
}
vM2=lM2=data.frame()
for (i in (n/4+1):(n/2)){
vM2=rbind(vM2,getvector(win_char[i,]))
lM2=rbind(lM2,getvector(lose_char[i,]))
}
vM3=lM3=data.frame()
for (i in (n/2+1):(n*0.75)){
vM3=rbind(vM3,getvector(win_char[i,]))
lM3=rbind(lM3,getvector(lose_char[i,]))
}
vM4=lM4=data.frame()
for (i in (n*0.75+1):n){
vM4=rbind(vM4,getvector(win_char[i,]))
lM4=rbind(lM4,getvector(lose_char[i,]))
}
vE1=rbind(vM1,vM2)
lE1=rbind(lM1,lM2)
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
names(vM4)=names(vM3)
names(lM4)=names(lM3)
vE2=rbind(vM3,vM4)
lE2=rbind(lM3,lM4)
vE=rbind(vE1,vE2)
lE=rbind(lE1,lE2)
View(vE)
View(chW_train)
write.table(vE,'chWE_train.txt',col.names=F,row.names=F)
write.table(lE,'chLE_train.txt',col.names=F,row.names=F)
chWE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chWE_train.txt", quote="\"")
View(chWE_train)
chLE_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chLE_train.txt", quote="\"")
View(chLE_train)
vE=chWE_train
lE=chLE_train
n=dim(vE)[1]
library(matrixcalc)
Y=factor(c(rep(1,n/2),rep(0,n/2)))
X=data.frame()
remove(X)
X1=data.frame()
for (i in 1:(n/2)){
tmp=t(vec(vE[i,]%*%t(vE[i,])-lE[i,]%*%t(lE[i,])))
X1=rbind(X1,tmp)
}
vE=as.matrix(vE)
lE=as.matrix(lE)
n=dim(vE)[1]
X1=data.frame()
for (i in 1:(n/2)){
tmp=t(vec(vE[i,]%*%t(vE[i,])-lE[i,]%*%t(lE[i,])))
X1=rbind(X1,tmp)
}
load("~/Documents/ACADEMIC/Machine Learning/03HS/data/data01_char/progress1.1.RData")
write.table(X,'X.txt',col.names=F,row.names=F)
library(caTools)
## Split tournament data: character indices
set.seed(10)
chW <- read.table("~/GitHub/Group-Comparison/data/tournament/chW.txt", quote="\"")
View(chW)
chL <- read.table("~/GitHub/Group-Comparison/data/tournament/chL.txt", quote="\"")
View(chL)
chL$spl=sample.split(chL,SplitRatio=0.8)
spl=chL$spl
chL=chL[-6]
chL_train=subset(chL, spl==TRUE)
chW_train=subset(chW, spl==TRUE)
chL_test=subset(chL, spl==FALSE)
chW_test=subset(chW, spl==FALSE)
write.table(chL_train,'chL_train.txt',col.names=F,row.names=F)
write.table(chW_train,'chW_train.txt',col.names=F,row.names=F)
write.table(chL_test,'chL_test.txt',col.names=F,row.names=F)
write.table(chW_test,'chW_test.txt',col.names=F,row.names=F)
remove(chL,chL_test)
remove(chL_train,chW,chW_test,chW_train)
pL <- read.table("~/GitHub/Group-Comparison/data/tournament/pL.txt", quote="\"")
View(pL)
pW <- read.table("~/GitHub/Group-Comparison/data/tournament/pW.txt", quote="\"")
View(pW)
pL_train=subset(pL, spl==TRUE)
pW_train=subset(pW, spl==TRUE)
pL_test=subset(pL, spl==FALSE)
pW_test=subset(pW, spl==FALSE)
write.table(pL_train,'pL_train.txt',col.names=F,row.names=F)
write.table(pW_train,'pW_train.txt',col.names=F,row.names=F)
write.table(pL_test,'pL_test.txt',col.names=F,row.names=F)
write.table(pW_test,'pW_test.txt',col.names=F,row.names=F)
X <- read.table("~/GitHub/Group-Comparison/data/tournament/X.txt", quote="\"")
View(X)
X_train=subset(X, spl==TRUE)
X_test=subset(X, spl==FALSE)
write.table(X_train,'X_train.txt',col.names=F,row.names=F)
write.table(X_test,'X_test.txt',col.names=F,row.names=F)
write.table(spl,'spl.txt',col.names=F,row.names=F)
ch_test_K <- read.table("~/GitHub/Group-Comparison/data/tournament/ch_test_K.txt", quote="\"")
View(ch_test_K)
ch_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/ch_train_K.txt", quote="\"")
View(ch_train_K)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
win_player=chW_train
lose_player=chL_train
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
tb
K=as.vector(tb)
K
tmp=as.data.frame.matrix(tb)
as.data.frame(tb)
p_test_K <- read.table("~/GitHub/Group-Comparison/data/tournament/p_test_K.txt", quote="\"")
View(p_test_K)
p_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/p_train_K.txt", quote="\"")
View(p_train_K)
ch_public_test_K <- read.table("~/GitHub/Group-Comparison/data/public/ch_public_test_K.txt", quote="\"")
View(ch_public_test_K)
ch_train_K <- read.table("~/GitHub/Group-Comparison/data/tournament/ch_train_K.txt", quote="\"")
View(ch_train_K)
ch_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/ch_public_train_K.txt", quote="\"")
View(ch_public_train_K)
p_public_test_K <- read.table("~/GitHub/Group-Comparison/data/public/p_public_test_K.txt", quote="\"")
View(p_public_test_K)
p_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/p_public_train_K.txt", quote="\"")
View(p_public_train_K)
remove(ch_public_test_K,ch_public_train_K,ch_train_K)
load("~/GitHub/Group-Comparison/data/public/XY_public.RData")
library(LiblineaR)
library(mclust)
fital1=LiblineaR(X_LR_train,Y_train,type=0,cost=6)
fital1.pre=predict(fital1,X_LR_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
accuracy1=1:10
for (i in 1:10){
accuracy1[i]=LiblineaR(X_LR_train,Y_train, type=0,cost=i,cross=5)
}
which.max(accuracy1)
accuracy1
fital1=LiblineaR(X_LR_train,Y_train,type=0,cost=which.max(accuracy1))
fital1.pre=predict(fital1,X_LR_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
load("~/GitHub/Group-Comparison/experiment result/LR&LR_allpair/ch_result_public.RData")
load("~/Documents/ACADEMIC/Machine Learning/03HS/data/data01_char/progress1.1.RData")
rm(list=setdiff(ls(), "Cname"))
heroranks.small=read.csv("~/Documents/ACADEMIC/Machine Learning/03HS/data/hotspairsrankings/heroranks-small.csv")
winpair=subset(heroranks.small,heroranks.small$tier==1)
losepair=subset(heroranks.small,heroranks.small$tier==9)
selectpairs=rbind(winpair,losepair)[,2:3]
getselection=function(a){
ind=rep(0,2)
ind[1]=which(Cname==a[1,1])
ind[2]=which(Cname==a[1,2])
return(ind)
}
Selection=data.frame()
k=dim(selectpairs)[1]
for (i in 1:k){
Selection=rbind(Selection,getselection(selectpairs[i,]))
}
n=dim(chL_train)[1]
getpair=function(a){
b=data.frame(t(combn(a,2)))
ind=numeric()
for (i in 1:10){
tmp=which(Selection[,1]==b[i,1]&Selection[,2]==b[i,2])
ind=c(ind,tmp)
}
return(ind)
}
getpairind=function(a){
ind=getpair(a)
tmp=rep(0,k)
tmp[ind]=1
return(tmp)
}
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
chL_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_train.txt", quote="\"")
View(chL_train)
chW_train <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_train.txt", quote="\"")
View(chW_train)
n=dim(chL_train)[1]
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_train[i,]))
X_sel=rbind(X_sel,getpairind(chL_train[i,]))
}
X_se=X_sew-X_sel
save.image("~/Documents/ACADEMIC/Machine Learning/03HS/data/XY_select.RData")
load("~/GitHub/Group-Comparison/data/tournament/XY.RData")
tmp=c(X_sel,X_sew)
tmp=cbind(X_sel,X_sew)
remove(tmp)
X_sel_train=cbind(X_LR_train,X_se)
chW_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chW_test.txt", quote="\"")
View(chW_test)
chL_test <- read.table("~/GitHub/Group-Comparison/data/tournament/chL_test.txt", quote="\"")
View(chL_test)
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_se=X_sew-X_sel
X_se_train=X_sel_train
X_se_test=cbind(X_LR_test,X_se)
X_se=X_se[7689:9610,]
X_sew=X_sel=data.frame()
for (i in 1:n){
X_sew=rbind(X_sew,getpairind(chW_test[i,]))
X_sel=rbind(X_sel,getpairind(chL_test[i,]))
}
X_se=X_sew-X_sel
X_se=X_se[1:1922,]
remove(X_se_test)
X_se_test=cbind(X_LR_test,X_se)
rm(list=setdiff(ls(), c("Cname","X_se_test","X_se_train","Y_test","Y_train")))
library(LiblineaR)
library(mclust)
fital1=LiblineaR(X_se_train,Y_train,type=0,cost=4)
fital1.pre=predict(fital1,X_se_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
accuracy1=1:10
for (i in 1:10){
accuracy1[i]=LiblineaR(X_se_train,Y_train, type=0,cost=i,cross=5)
}
fital1=LiblineaR(X_se_train,Y_train,type=0,cost=which.max(accuracy1))
which.max(accuracy1)
fital1.pre=predict(fital1,X_se_test, proba = FALSE,decisionValues = FALSE)$predictions
fital1.prerror=classError(fital1.pre,Y_test)
save.image("~/GitHub/Group-Comparison/experiment result/LR_select.RData")
chW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chW_public_train.txt", quote="\"")
View(chW_public_train)
chL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/chL_public_train.txt", quote="\"")
View(chL_public_train)
win_player=chW_public_train
lose_player=chL_public_train
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
tb
p_public_train_K <- read.table("~/GitHub/Group-Comparison/data/public/p_public_train_K.txt", quote="\"")
View(p_public_train_K)
pW_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_train.txt", quote="\"")
View(pW_public_train)
pL_public_train <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_train.txt", quote="\"")
View(pL_public_train)
win_player=pW_public_train
lose_player=pL_public_train
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
tb
K=as.data.frame(tb)
View(K)
tmpK=as.vector(tb)
View(K)
getK=function(win_player,lose_player){
win=as.vector(as.matrix(win_player))
lose=as.vector(as.matrix(lose_player))
total=c(win,lose)
tb=table(total)
#K=as.vector(tb)
K=as.data.frame(tb)
return(K)
}
p_public_train_K=getK(pW_public_train,pL_public_train)
write.table(p_public_train_K,'p_public_train_K.txt',col.names=F,row.names=F)
pW_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pW_public_test.txt", quote="\"")
View(pW_public_test)
pL_public_test <- read.table("~/GitHub/Group-Comparison/data/public/pL_public_test.txt", quote="\"")
View(pL_public_test)
p_public_test_K=getK(pW_public_test,pL_public_test)
write.table(p_public_test_K,'p_public_test_K.txt',col.names=F,row.names=F)
View(p_public_train_K)
View(p_public_test_K)
